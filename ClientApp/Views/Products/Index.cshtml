@model IEnumerable<ClientApp.Models.Product>

@{
    ViewData["Title"] = "Products";
}
@if (ViewBag.ProductServiceStatus == "Down")
{
    <div class="flex flex-col items-center justify-center mt-64">
        <div class="bg-red-500 text-white p-8 rounded-lg shadow-md text-center">
            <h1 class="text-3xl font-bold">Product Service is Down</h1>
            <p class="mt-4">Please try again later.</p>
        </div>
    </div>
}
else
{
    <div class="bg-gray-100 text-black p-4 rounded-lg shadow-md">
        <div class="flex justify-between items-center mb-4">
            <div>
                <h1 class="text-2xl font-bold">Products</h1>
                <p class="text-gray-600">A list of all the products in your account including their name and price.</p>
            </div>
            <div>
                <a href="@Url.Action("Create")" class="px-4 py-2 bg-indigo-500 text-white rounded hover:bg-indigo-600">Add product</a>
            </div>
        </div>

        <form asp-action="Index" method="get" class="mb-4">
            <select name="pageSize" onchange="this.form.submit()" class="p-2 rounded border border-gray-300 bg-white text-black">
                <!option value="10" @(ViewBag.PageSize == 10 ? "selected" : "")>10</!option>
                <!option value="25" @(ViewBag.PageSize == 25 ? "selected" : "")>25</!option>
                <!option value="50" @(ViewBag.PageSize == 50 ? "selected" : "")>50</!option>
                <!option value="100" @(ViewBag.PageSize == 100 ? "selected" : "")>100</!option>
                <!option value="500" @(ViewBag.PageSize == 500 ? "selected" : "")>500</!option>
                <!option value="1000" @(ViewBag.PageSize == 1000 ? "selected" : "")>1000</!option>
                <!option value="10000" @(ViewBag.PageSize == 10000 ? "selected" : "")>10000</!option>
            </select>
        </form>

        <div style="max-height: 500px" class="overflow-x-auto max-h-screen">
            <table class="min-w-full bg-white text-black border border-gray-300 shadow-md rounded-lg">
                <thead class="bg-gray-200">
                <tr>
                    <th class="py-2 px-4 border-b">ID</th>
                    <th class="py-2 px-4 border-b">Name</th>
                    <th class="py-2 px-4 border-b">Price</th>
                    <th class="py-2 px-4 border-b">Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var product in Model)
                {
                    <tr class="hover:bg-gray-100">
                        <td class="py-2 px-4 border-b">@product.Id</td>
                        <td class="py-2 px-4 border-b">@product.Name</td>
                        <td class="py-2 px-4 border-b">@product.Price</td>
                        <td class="py-2 px-4 border-b">
                            <a href="@Url.Action("Edit", new { id = product.Id })" class="text-blue-600 hover:text-blue-800">Edit</a> |
                            <a href="@Url.Action("Delete", new { id = product.Id })" class="text-red-600 hover:text-red-800">Delete</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="mt-4">
            <ul class="flex justify-center">
                <li class="mx-2">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <a href="@Url.Action("Index", new { pageNumber = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })" class="px-3 py-2 bg-gray-600 text-white rounded hover:bg-gray-700">Previous</a>
                    }
                    else
                    {
                        <span class="px-3 py-2 bg-gray-600 text-white rounded opacity-50 cursor-not-allowed">Previous</span>
                    }
                </li>
                <li class="mx-2">
                    <a href="@Url.Action("Index", new { pageNumber = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })" class="px-3 py-2 bg-gray-600 text-white rounded hover:bg-gray-700">Next</a>
                </li>
            </ul>
        </div>
    </div>
}